generator client {
  provider      = "prisma-client-js"
  output        = "../lib/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  email     String    @unique
  password  String
  name      String?
  avatar    String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  articles  Article[]
  comments  Comment[]
  sessions  Session[]

  @@map("users")
}

model Session {
  id        String   @id @default(cuid())
  token     String   @unique
  userId    String
  expiresAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model Article {
  id        String       @id @default(cuid())
  title     String
  content   String
  authorId  String
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  avatar    String?
  tags      ArticleTag[]
  author    User         @relation(fields: [authorId], references: [id], onDelete: Cascade)
  comments  Comment[]

  @@map("articles")
}

model Comment {
  id        String    @id @default(cuid())
  content   String
  articleId String
  authorId  String
  parentId  String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  parent    Comment?  @relation("CommentReplies", fields: [parentId], references: [id], onDelete: Cascade)
  replies   Comment[] @relation("CommentReplies")
  author    User      @relation(fields: [authorId], references: [id], onDelete: Cascade)
  article   Article   @relation(fields: [articleId], references: [id], onDelete: Cascade)

  @@map("comments")
}

model Tag {
  id          String       @id @default(cuid())
  name        String       @unique
  createdAt   DateTime     @default(now())
  articles    ArticleTag[]

  @@map("tags")
}

model ArticleTag {
  id        String  @id @default(cuid())
  articleId String
  tagId     String
  tag       Tag     @relation(fields: [tagId], references: [id], onDelete: Cascade)
  article   Article @relation(fields: [articleId], references: [id], onDelete: Cascade)

  @@unique([articleId, tagId])
  @@map("article_tags")
}
